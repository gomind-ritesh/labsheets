import java.util.Scanner;

public class Qu2_stack {

    public static Stack copystack(Stack stack1, Stack stack2, boolean flag) {

        Stack tempstack = new Stack();

        // Create a deep copy of stack1 to tempstack
        Stack reversedstack = new Stack();
        while (!stack1.isEmpty()) {
            reversedstack.push(stack1.pop().getElement());  // Reverse stack1 into tempstack
        }

        // Restore stack1 while copying its elements to tempstack (to preserve stack1)
        while (!reversedstack.isEmpty()) {
            int element = reversedstack.pop().getElement();
            tempstack.push(element);  // Copy to tempstack
            stack1.push(element);     // Restore original stack1
        }

        // Now, based on the flag, either reverse the copy or leave it as-is
        if (flag) {
            // Reversed copy
            while (!tempstack.isEmpty()) {
                stack2.push(tempstack.pop().getElement());  // Push in reversed order
            }
        } else {
            // Non-reversed copy
            Stack forwardstack = new Stack();
            while (!tempstack.isEmpty()) {
                forwardstack.push(tempstack.pop().getElement());  // Reverse tempstack to original order
            }
            while (!forwardstack.isEmpty()) {
                stack2.push(forwardstack.pop().getElement());  // Push elements in original order
            }
        }

        return stack2;
    }

    public static void main(String[] args) {

        Scanner scanIn = new Scanner(System.in);

        int element;

        Stack mystack1 = new Stack();
        Stack mystack2 = new Stack();

        // Insert new elements into stack1
        System.out.print("Input numbers for stack1 (end list with 0): ");
        element = scanIn.nextInt();
        while (element != 0) {
            mystack1.push(element);
            element = scanIn.nextInt();
        }

        // Insert new elements into stack2
        System.out.print("Input numbers for stack2 (end list with 0): ");
        element = scanIn.nextInt();
        while (element != 0) {
            mystack2.push(element);
            element = scanIn.nextInt();
        }

        // Copy stack1 into stack2 with the flag set to true (reversed)
        mystack2 = copystack(mystack1, mystack2, true);

        System.out.print("Combined numbers in stack2: ");
        mystack2.display();

        scanIn.close();
    }
}

